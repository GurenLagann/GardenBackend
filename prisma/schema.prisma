generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(uuid())
  name        String
  usuario     String       @unique
  password    String
  status      String       @default("Ativo")
  created_at  DateTime     @default(now())
  updated_at  DateTime     @updatedAt
  sales       Sales[]
  user_access UserAccess[]
}

model UserAccess {
  id         String   @id @default(uuid())
  userId     String?
  accessId   String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  Access     Access?  @relation(fields: [accessId], references: [id])
  User       User?    @relation(fields: [userId], references: [id])
}

model Access {
  id          String       @id @default(uuid())
  name        String       @unique
  created_at  DateTime     @default(now())
  updated_at  DateTime     @updatedAt
  user_access UserAccess[]
}

model Product {
  id            String          @id @default(uuid())
  name          String
  price         Float
  amount        Int
  created_at    DateTime        @default(now())
  updated_at    DateTime        @updatedAt
  Photo         String?
  SalesProducts SalesProducts[]
}

model Sales {
  id            String          @id @default(uuid())
  total_value   Float
  discont_value Float?
  final_value   Float
  userId        String?
  created_at    DateTime        @default(now())
  updated_at    DateTime        @updatedAt
  user          User?           @relation(fields: [userId], references: [id])
  SalesProducts SalesProducts[]
}

model SalesProducts {
  id         String   @id @default(uuid())
  quantity   Int
  salesId    String
  productId  String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  product    Product  @relation(fields: [productId], references: [id])
  sales      Sales    @relation(fields: [salesId], references: [id])
}
